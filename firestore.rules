rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read/write access to authenticated users
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Cases collection - users can read all cases, but only write their own
    match /cases/{caseId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.resource.data.createdBy == request.auth.uid;
      allow update: if request.auth != null && 
        (resource.data.createdBy == request.auth.uid || 
         request.resource.data.assignedTo == request.auth.uid);
      allow delete: if request.auth != null && 
        resource.data.createdBy == request.auth.uid;
    }
    
    // Answers collection - users can read all answers, but only write their own
    match /answers/{answerId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.resource.data.createdBy == request.auth.uid;
      allow update: if request.auth != null && 
        resource.data.createdBy == request.auth.uid;
      allow delete: if request.auth != null && 
        resource.data.createdBy == request.auth.uid;
    }
    
    // Users collection - users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Votes collection - users can read all votes, but only write their own
    match /votes/{voteId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Test collection - for testing purposes only
    match /test/{docId} {
      allow read, write: if request.auth != null;
    }
  }
} 